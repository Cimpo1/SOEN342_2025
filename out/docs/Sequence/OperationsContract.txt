Contract CO1:   SearchConnection
Operation:      searchConnections(String departure, String arrival, String day, String depTime, String arrTime, String trainType, String firstRate, String secondRate)
Cross Ref.:     Sequence Diagram for Searching and Viewing Train Routes
Preconditions:  The terminal has been accessed. User needs to input at minimum a valid departure and arrival city to have the poossibility to get results.
Postconditions: Terminal.results is populated with routes (attribute modification)

Contract CO2:   SelectSort
Operation:      SelectSort(Integer option)
Cross Ref.:     Sequence Diagram for Searching and Viewing Train Routes
Preconditions:  User inputs Parameters, a Search is completed
Postconditions: Sorted connections

Contract CO3:   Access Terminal
Operation:      AccessTerminal()
Cross Ref.:     Sequence Diagram for Searching and Viewing Train Routes
Preconditions:  User is present
Postconditions: Terminal Opens

Contract CO4:   End
Operation:      End()
Cross Ref.:     Sequence Diagram for Searching and Viewing Train Routes
Preconditions:  User inputs End() Function
Postconditions: Terminal ended